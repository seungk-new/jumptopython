#abs는 절댓값을 돌려주는 함수이다.
print(abs(-1))
#all은 반복 가능한(iterable) 자료형 x를 입력 인수로 받으며 이 x의 요소가 모두 참이면 True,
#거짓이 하나라도 있으면 False를 돌려준다.
#반복 가능한 자료형이란 for문으로 그 값을 출력할 수 있는 것.
#-> 리스트, 튜플, 문자열, 딕셔너리, 집합 등이 있다.
print(all([1, 2, 3]))
print(all([0]))
#any는 반복 가능한(iterable)자료형 x를 입력 인수로 받으며 이 x의 요소 중 하나라도
#참이 있으면 True를 돌려주고, x가 모두 거짓일 때에만 False를 돌려준다.<->all
print(any([1,2]))
print(any([1, 0]))
#chr(i)는 유니코드(Unicode)값을 입력받아 그 코드에 해당하는 문자를 출력하는 함수.
# *유니코드는 전 세계의 모든 문자를 컴퓨터에서 일관되게 표현하고 다룰 수 있도록
#설계된 산업 표준이다.
print(chr(65))
print(chr(44032))
#dir은 객체가 자체적으로 가지고 있는 변수나 함수를 보여준다. 다음 예는 리스트와 딕셔너리 객체 관련 함수(매서드)
#를 보여주는 예이다.
print(dir([1, 2, 3]))
#divmod(a, b)는 2개의 숫자를 입력으로 받는다. 그리고 a를 b로 나눈 몫과 나머지를 튜플로 돌려주는 함수.
print(divmod(7, 3))
#enumerate는 '열거하다'라는 뜻이다. 이 함수는 순서가 있는 자료형(리스트, 튜플, 문자열)을
#입력으로 받아 인덱스 값을 포함하는 enumerate객체를 돌려준다.
#보통 enumerate함수는 for문과 함께 사용됨.
for i, age in enumerate(('27', '12', '55')):
    print(i, age)
#enumerate를 for문과 함께 사용하면 자료형의 현재 순서(index)와 그 값을 쉽게
#알 수 있다.

#eval(expression)은 실행 가능한 문자열(1 + 2, 'hi' + 'i'같은 것)을 입력으로 받아 문자열을 실행한 결괏값 돌려줌.
print(eval('1' + '2'))
#보통 eval은 입력받은 문자열로 파이썬 함수나 클래스를 동적으로 실행하고 싶을 때 사용한다.
